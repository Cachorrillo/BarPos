@page "{id:long}"
@model BarPos.Pages.POS.DetallesModel
@{
    ViewData["Title"] = "Detalle de Cuenta";
}

<h2 class="text-center mb-4">🧾 Detalle de Cuenta - @Model.Cuenta.NombreCliente</h2>

<form id="antiForgery" method="post">
    @Html.AntiForgeryToken()
</form>
<form id="antiForgery" method="post">@Html.AntiForgeryToken()</form>


@if (TempData["Error"] != null)
{
    <div class="alert alert-warning text-center fw-bold">
        ⚠️ @TempData["Error"]
    </div>
}

<div class="d-flex justify-content-between mb-3">
    <a asp-page="Index" class="btn btn-secondary">
        <i class="bi bi-arrow-left"></i> Volver al POS
    </a>
    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#modalAgregar">
        <i class="bi bi-cart-plus"></i> Agregar Productos
    </button>
</div>

@if (Model.Detalles.Count == 0)
{
    <div class="alert alert-info text-center">
        No hay productos en esta cuenta.
    </div>
}
else
{
    <table class="table table-striped table-bordered text-center align-middle">
        <thead class="table-dark">
            <tr>
                <th>Producto</th>
                <th>Presentación</th>
                <th>Cantidad</th>
                <th>Precio Unitario (₡)</th>
                <th>Subtotal (₡)</th>
                <th>Acciones</th> <!-- 👈 NUEVA COLUMNA -->
            </tr>
        </thead>
        <tbody>
            @foreach (var d in Model.Detalles)
            {
                <tr id="row-@d.Id">
                    <td>@(d.Producto?.Nombre ?? d.Presentacion?.Producto?.Nombre ?? "Desconocido")</td>
                    <td>@(d.Presentacion?.Nombre ?? "-")</td>
                    <td>
                        <div class="input-group input-group-sm justify-content-center" style="max-width: 140px;">
                            <button type="button"
                                    class="btn btn-outline-secondary qty-btn btn-menos"
                                    data-detalle-id="@d.Id"
                                    aria-label="Disminuir">
                                −
                            </button>

                            <input type="number"
                                   class="form-control text-center cantidad-input"
                                   value="@d.Cantidad"
                                   min="1" step="1"
                                   inputmode="numeric" pattern="[0-9]*"
                                   data-detalle-id="@d.Id" />

                            <button type="button"
                                    class="btn btn-outline-secondary qty-btn btn-mas"
                                    data-detalle-id="@d.Id"
                                    aria-label="Aumentar">
                                +
                            </button>
                        </div>
                    </td>


                    <td class="pu">@d.PrecioUnitario.ToString("N2")</td>
                    <td class="st">@((d.PrecioUnitario * d.Cantidad).ToString("N2"))</td>
                    <td>
                        <button class="btn btn-sm btn-outline-success btn-actualizar me-1"
                                data-detalle-id="@d.Id" title="Actualizar cantidad">
                            <i class="bi bi-check-circle"></i>
                        </button>
                        <button class="btn btn-sm btn-outline-danger btn-eliminar"
                                data-detalle-id="@d.Id" title="Eliminar producto">
                            <i class="bi bi-trash"></i>
                        </button>
                    </td>
                </tr>
            }

        </tbody>
    </table>

    <div class="text-end fw-bold fs-5">
        Total: ₡<span id="totalActual">@Model.Cuenta.Total.ToString("N2")</span>
    </div>

}

<!-- 🧩 Modal POS mejorado -->
<div class="modal fade" id="modalAgregar" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <form id="formAgregarProductos">
                @Html.AntiForgeryToken()  <!-- 🔸 Token CSRF -->
                <input type="hidden" id="CuentaId" value="@Model.Cuenta.Id" />
                <input type="hidden" id="ProductoId" name="ProductoId" value="0" />

                <div class="modal-header bg-dark text-white">
                    <h5 class="modal-title" id="modalLabel">Seleccionar Productos</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>

                <div class="modal-body">
                    <!-- Categorías -->
                    <div class="mb-3">
                        <label class="form-label fw-bold">Categoría:</label>
                        <div class="d-flex flex-wrap gap-2">
                            @foreach (var c in (IEnumerable<BarPos.Models.Categoria>)ViewData["Categorias"])
                            {
                                <button type="button" class="btn btn-outline-primary btn-sm categoria-btn"
                                        data-id="@c.Id" data-nombre="@c.Nombre">
                                    @c.Nombre
                                </button>
                            }
                        </div>
                    </div>

                    <!-- Productos -->
                    <div id="contenedorProductos" class="border rounded p-3" style="max-height: 300px; overflow-y: auto;">
                        <p class="text-muted text-center">Seleccione una categoría para ver los productos...</p>
                    </div>

                    <!-- Presentaciones (solo licores) -->
                    <div id="seccionPresentaciones" class="mt-3" style="display:none;">
                        <label class="form-label fw-bold">Presentación:</label>
                        <select id="PresentacionId" name="PresentacionId" class="form-select">
                            <option value="">-- Seleccione una presentación --</option>
                        </select>
                    </div>

                    <!-- Cantidad -->
                    <div class="mt-3">
                        <label for="Cantidad" class="form-label fw-bold">Cantidad:</label>
                        <input id="Cantidad" class="form-control" type="number" min="1" value="1" />
                    </div>

                    <hr />
                    <!-- Tabla del carrito -->
                    <h5>🧺 Productos seleccionados</h5>
                    <table id="tablaSeleccionados" class="table table-sm table-bordered text-center">
                        <thead>
                            <tr class="table-secondary">
                                <th>Producto</th>
                                <th>Presentación</th>
                                <th>Cantidad</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr><td colspan="4" class="text-muted">Aún no hay productos seleccionados.</td></tr>
                        </tbody>
                    </table>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button id="btnGuardarTodo" class="btn btn-success">
                        <i class="bi bi-check-circle"></i> Guardar todos los productos
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- ✅ Toast de confirmación -->
<div class="position-fixed top-0 end-0 p-3" style="z-index: 1080">
    <div id="toastAgregado" class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body fw-bold">
                ✅ Producto agregado al carrito.
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>




@section Scripts {
    <script>
        $(document).ready(function () {

            const cuentaId = @Model.Cuenta.Id;
            const token = $('#antiForgery input[name="__RequestVerificationToken"]').val();
            const fmt = (v) => (Number(v) || 0).toLocaleString("es-CR", { minimumFractionDigits: 2, maximumFractionDigits: 2 });

            let categoriaSeleccionada = "";
            let productosEnCarrito = [];
            let productoTemporal = null;

            // 🔔 Toast visual
            function mostrarToast(nombreProducto) {
                const toastEl = document.getElementById('toastAgregado');
                toastEl.querySelector('.toast-body').textContent = `✅ ${nombreProducto} agregado al carrito.`;
                const toast = new bootstrap.Toast(toastEl);
                toast.show();
            }

            // ===============================
            // 🔹 CARGA DE CATEGORÍAS Y PRODUCTOS
            // ===============================
            $(".categoria-btn").click(function () {
                categoriaSeleccionada = $(this).data("nombre");
                const categoriaId = $(this).data("id");

                $(".categoria-btn").removeClass("btn-primary").addClass("btn-outline-primary");
                $(this).removeClass("btn-outline-primary").addClass("btn-primary");

                $("#contenedorProductos").html("<p class='text-muted text-center'>Cargando productos...</p>");

                $.getJSON(`?handler=ProductosPorCategoria&categoriaId=${categoriaId}`, function (data) {
                    if (data.length === 0) {
                        $("#contenedorProductos").html("<p class='text-center text-danger'>No hay productos en esta categoría.</p>");
                        return;
                    }

                    let html = "<div class='d-flex flex-wrap gap-2 justify-content-start'>";
                    $.each(data, function (i, producto) {
                        html += `<button type="button" class="btn btn-outline-dark producto-btn"
                                        data-id="${producto.id}" data-nombre="${producto.nombre}">
                                        ${producto.nombre}
                                 </button>`;
                    });
                    html += "</div>";

                    $("#contenedorProductos").html(html);
                    $("#seccionPresentaciones").hide();
                });
            });

            $(document).on("click", ".producto-btn", function () {
                const productoId = $(this).data("id");
                const nombre = $(this).data("nombre");
                const categoria = categoriaSeleccionada.toLowerCase();
                const cantidad = parseInt($("#Cantidad").val()) || 1;

                $(".producto-btn").removeClass("btn-dark").addClass("btn-outline-dark");
                $(this).removeClass("btn-outline-dark").addClass("btn-dark");

                if (categoria === "licores") {
                    productoTemporal = { productoId, nombre, cantidad };
                    $("#seccionPresentaciones").show();
                    $("#PresentacionId").html("<option>Cargando...</option>");
                    $.getJSON(`?handler=PresentacionesPorProducto&productoId=${productoId}`, function (data) {
                        $("#PresentacionId").empty().append('<option value="">-- Seleccione una presentación --</option>');
                        $.each(data, function (i, pres) {
                            $("#PresentacionId").append(`<option value="${pres.id}">${pres.nombre} - ₡${pres.precioVenta.toFixed(2)}</option>`);
                        });
                    });
                } else {
                    agregarAlCarrito({ productoId, presentacionId: null, nombre, presentacion: "-", cantidad });
                }
            });

            $("#PresentacionId").change(function () {
                const presId = $(this).val();
                const presTexto = $("#PresentacionId option:selected").text();

                if (!productoTemporal || !presId) {
                    alert("⚠️ Debes seleccionar una presentación válida para el licor.");
                    return;
                }

                agregarAlCarrito({
                    productoId: productoTemporal.productoId,
                    presentacionId: presId,
                    nombre: productoTemporal.nombre,
                    presentacion: presTexto,
                    cantidad: productoTemporal.cantidad
                });

                productoTemporal = null;
                $("#seccionPresentaciones").hide();
            });

            // ===============================
            // 🔹 CARRITO DE PRODUCTOS
            // ===============================
            function renderTabla() {
                const tbody = $("#tablaSeleccionados tbody");
                tbody.empty();
                if (productosEnCarrito.length === 0) {
                    tbody.append("<tr><td colspan='4' class='text-muted'>Aún no hay productos seleccionados.</td></tr>");
                    return;
                }
                productosEnCarrito.forEach((p, i) => {
                    tbody.append(`<tr>
                        <td>${p.nombre}</td>
                        <td>${p.presentacion}</td>
                        <td>${p.cantidad}</td>
                        <td><button class='btn btn-sm btn-danger eliminar-item' data-index='${i}'>🗑</button></td>
                    </tr>`);
                });
            }

            function agregarAlCarrito(item) {
                if (item.presentacionId === "" || item.presentacionId === null && categoriaSeleccionada.toLowerCase() === "licores") {
                    alert("⚠️ Debes seleccionar una presentación válida antes de agregar el licor.");
                    return;
                }
                productosEnCarrito.push(item);
                renderTabla();
                mostrarToast(item.nombre);
            }

            $(document).on("click", ".eliminar-item", function () {
                const index = $(this).data("index");
                productosEnCarrito.splice(index, 1);
                renderTabla();
            });

            $("#btnGuardarTodo").click(function (e) {
                e.preventDefault();
                if (productosEnCarrito.length === 0) {
                    alert("⚠️ Debes agregar al menos un producto antes de guardar.");
                    return;
                }

                const cuentaId = $("#CuentaId").val();

                $.ajax({
                    url: `/POS/Detalles/${cuentaId}?handler=AgregarMultiples`,
                    method: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(productosEnCarrito),
                    headers: { "RequestVerificationToken": token },
                    success: function () {
                        window.location.reload();
                    },
                    error: function (xhr) {
                        alert("❌ Ocurrió un error al guardar.\n" + (xhr.responseText || "Sin detalles del servidor."));
                    }
                });
            });

            // ===============================
            // 🔹 ACTUALIZAR / ELIMINAR DETALLES EXISTENTES
            // ===============================
            $(document).on("click", ".btn-actualizar", function () {
                const detalleId = $(this).data("detalle-id");
                const nuevaCantidad = parseInt($(`input[data-detalle-id='${detalleId}']`).val(), 10);

                if (!nuevaCantidad || nuevaCantidad < 1) {
                    alert("⚠️ La cantidad debe ser al menos 1.");
                    return;
                }

                $.ajax({
                    url: `/POS/Detalles/${cuentaId}?handler=ActualizarDetalle`,
                    method: "POST",
                    contentType: "application/json",
                    headers: { "RequestVerificationToken": token },
                    data: JSON.stringify({ detalleId: detalleId, cantidad: nuevaCantidad }),
                    success: function (data) {
                        if (!data || !data.success) {
                            alert("⚠️ No se pudo actualizar. " + (data?.message ?? ""));
                            return;
                        }
                        $(`#row-${data.detalleId} td.st`).text(fmt(data.nuevoSubtotal));
                        $("#totalActual").text(fmt(data.nuevoTotal));
                    },
                    error: function (xhr) {
                        alert("❌ Error al actualizar: " + (xhr.responseText || "Sin detalles"));
                    }
                });
            });

            $(document).on("click", ".btn-eliminar", function () {
                if (!confirm("¿Seguro que deseas eliminar este producto?")) return;

                const detalleId = $(this).data("detalle-id");

                $.ajax({
                    url: `/POS/Detalles/${cuentaId}?handler=EliminarDetalle`,
                    method: "POST",
                    contentType: "application/json",
                    headers: { "RequestVerificationToken": token },
                    data: JSON.stringify({ detalleId: detalleId }),
                    success: function (data) {
                        if (!data || !data.success) {
                            alert("⚠️ No se pudo eliminar. " + (data?.message ?? ""));
                            return;
                        }
                        $(`#row-${data.detalleId}`).remove();
                        $("#totalActual").text(fmt(data.nuevoTotal));
                    },
                    error: function (xhr) {
                        alert("❌ Error al eliminar: " + (xhr.responseText || "Sin detalles"));
                    }
                });
            });

            // ===============================
            // 🔹 BOTONES + / − PARA CANTIDAD
            // ===============================
            $(document).on("click", ".btn-mas", function () {
                const detalleId = $(this).data("detalle-id");
                const input = $(`input[data-detalle-id='${detalleId}']`);
                let cantidad = parseInt(input.val()) || 0;
                input.val(++cantidad).trigger("change");
            });

            $(document).on("click", ".btn-menos", function () {
                const detalleId = $(this).data("detalle-id");
                const input = $(`input[data-detalle-id='${detalleId}']`);
                let cantidad = parseInt(input.val()) || 0;
                if (cantidad > 1) input.val(--cantidad).trigger("change");
            });

            $(document).on("change", ".cantidad-input", function () {
                const detalleId = $(this).data("detalle-id");
                const nuevaCantidad = parseInt($(this).val()) || 1;

                $.ajax({
                    url: `/POS/Detalles/${cuentaId}?handler=ActualizarDetalle`,
                    method: "POST",
                    contentType: "application/json",
                    headers: { "RequestVerificationToken": token },
                    data: JSON.stringify({ detalleId: detalleId, cantidad: nuevaCantidad }),
                    success: function (data) {
                        if (data && data.success) {
                            $(`#row-${data.detalleId} td.st`).text(fmt(data.nuevoSubtotal));
                            $("#totalActual").text(fmt(data.nuevoTotal));
                        }
                    },
                    error: function () {
                        alert("❌ Error al actualizar cantidad");
                    }
                });
            });

        }); // 👈 cierre correcto de $(document).ready
    </script>
}




